"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[2046],{"./components/combinations/virtual-scroll/WindowDynamicVirtualScroll.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Primary:()=>Primary,__namedExportsOrder:()=>__namedExportsOrder,default:()=>WindowDynamicVirtualScroll_stories});var react=__webpack_require__("../../../node_modules/.pnpm/react@18.3.1/node_modules/react/index.js"),esm=__webpack_require__("../../../node_modules/.pnpm/@tanstack+react-virtual@3.8.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@tanstack/react-virtual/dist/esm/index.js");function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}const DEFAULT_OPTIONS={estimateSize:()=>30,overscan:5},WindowDynamicVirtualScroll=react.forwardRef(((_ref,ref)=>{let{children,spaceY=12,virtualOptions,...others}=_ref;const parentRef=react.useRef(null),virtualizer=(0,esm.XW)({...DEFAULT_OPTIONS,...virtualOptions,scrollMargin:parentRef.current?.offsetTop??0});react.useImperativeHandle(ref,(()=>({calculateRange:virtualizer.calculateRange,scrollToIndex:virtualizer.scrollToIndex,scrollToOffset:virtualizer.scrollToOffset})));const items=virtualizer.getVirtualItems(),totalHeight=virtualizer.getTotalSize()+items.length*spaceY;return react.createElement("div",_extends({},others,{style:{height:`${totalHeight}px`,position:"relative",width:"100%"},ref:parentRef}),items.map((item=>{const y=item.start-virtualizer.options.scrollMargin,marginTop=spaceY*item.index;return react.createElement("div",{style:{height:`${item.size}px`,left:0,position:"absolute",top:0,transform:`translate3d(0, ${y+marginTop}px, 0)`,width:"100%"},key:item.key},children({item,virtualizer}))})))}));try{WindowDynamicVirtualScroll.displayName="WindowDynamicVirtualScroll",WindowDynamicVirtualScroll.__docgenInfo={description:"Must use data-index={item.index} and ref={virtualizer.measureElement} as a props to calculate the size of the item.s",displayName:"WindowDynamicVirtualScroll",props:{spaceY:{defaultValue:{value:"12"},description:"The space between each item.",name:"spaceY",required:!1,type:{name:"number"}},virtualOptions:{defaultValue:null,description:"",name:"virtualOptions",required:!0,type:{name:'OmitBy<VirtualizerScrollOptions<ScrollElement, ItemElement>, "getScrollElement">'}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/combinations/virtual-scroll/WindowDynamicVirtualScroll.tsx#WindowDynamicVirtualScroll"]={docgenInfo:WindowDynamicVirtualScroll.__docgenInfo,name:"WindowDynamicVirtualScroll",path:"src/components/combinations/virtual-scroll/WindowDynamicVirtualScroll.tsx#WindowDynamicVirtualScroll"})}catch(__react_docgen_typescript_loader_error){}const Primary={args:{children:function children(_ref){let{item}=_ref;const longText=Array.from({length:item.index},((_,i)=>i)).join(" ");return react.createElement("div",{style:{border:"1px solid black"}},item.index," = ",longText)},virtualOptions:{count:1e3,overscan:5}},render:args=>react.createElement("div",null,react.createElement("div",null,react.createElement("h1",null,"WindowDynamicVirtualScroll"),react.createElement("p",null,"This component is a virtual scroll component that uses the window as the scroll element."),react.createElement("p",null,"This component is useful when you want to render a large list of items and you don't want to render all of them at once."),react.createElement("p",null,"This component is useful when you want to render a large list of items and you don't want to render all of them at once."),react.createElement("p",null,"This component is useful when you want to render a large list of items and you don't want to render all of them at once."),react.createElement("p",null,"This component is useful when you want to render a large list of items and you don't want to render all of them at once.")),react.createElement(WindowDynamicVirtualScroll,args))},WindowDynamicVirtualScroll_stories={component:WindowDynamicVirtualScroll,parameters:{},title:"VirtualScroll/WindowDynamicVirtualScroll"},__namedExportsOrder=["Primary"];Primary.parameters={...Primary.parameters,docs:{...Primary.parameters?.docs,source:{originalSource:'{\n  args: {\n    children,\n    virtualOptions: {\n      count: 1000,\n      overscan: 5\n    }\n  },\n  render: args => {\n    return <div>\n        <div>\n          <h1>WindowDynamicVirtualScroll</h1>\n          <p>This component is a virtual scroll component that uses the window as the scroll element.</p>\n          <p>\n            {"This component is useful when you want to render a large list of items and you don\'t want to render all of them at once."}\n          </p>\n          <p>\n            {"This component is useful when you want to render a large list of items and you don\'t want to render all of them at once."}\n          </p>\n          <p>\n            {"This component is useful when you want to render a large list of items and you don\'t want to render all of them at once."}\n          </p>\n          <p>\n            {"This component is useful when you want to render a large list of items and you don\'t want to render all of them at once."}\n          </p>\n        </div>\n        <WindowDynamicVirtualScroll {...args} />\n      </div>;\n  }\n}',...Primary.parameters?.docs?.source}}}}}]);